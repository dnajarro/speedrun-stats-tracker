version: '3'

services:
  speedrun_postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    networks:
      - speedrun_stats_network
    container_name: speedrun_db_container
    environment:
      POSTGRES_DB: speedrun_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql

  flaskapp:
    container_name: flaskapp
    image: flaskapp:latest
    build:
      context: ./flaskapp
      dockerfile: flask.dockerfile
    ports:
      - 4000:4000
    networks:
      - speedrun_stats_network
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:secret@speedrun_db_container:5432/speedrun_db
    depends_on:
      - speedrun_postgres

  # etl_script:
  #   build:
  #     context: ./etl
  #     dockerfile: Dockerfile
  #   command: ["python", "etl_script.py"]
  #   networks:
  #     - speedrun_stats_network
  #   depends_on:
  #     - speedrun_postgres
  
  # postgres database for internal Airflow data management
  postgres:
    image: postgres:15
    networks:
      - speedrun_stats_network
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
  
  init-airflow:
    image: apache/airflow:latest
    depends_on:
      - postgres
    networks:
      - speedrun_stats_network
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgres+psycopg2://airflow:airflow@postgres/airflow
    command: >
      bash -c "airflow db init &&
              airflow users create --username airflow --password password --firstname John --lastname Doe --role Admin --email admin@example.com"

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    depends_on:
      - postgres
    networks:
      - speedrun_stats_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # map dags
      - ./airflow/dags:/opt/airflow/dags
      # map etl folder
      - ./etl:/opt/airflow/etl
      # gives Airflow access to the Docker network through the socket
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgres+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=tuAKStwS_F8_Q-WK-C88r4QFI88SBTfS5WQ3ilN1leA=
      - AIRFLOW__WEBSERVER__DEFAULT__USER_USERNAME=airflow
      - AIRFLOW__WEBSERVER__DEFAULT__USER_PASSWORD=password
      - AIRFLOW_WWW_USER_USERNAME=airflow
      - AIRFLOW_WWW_USER_PASSWORD=password
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
    ports:
      - "8080:8080"
    command: webserver

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    depends_on:
      - postgres
    networks:
      - speedrun_stats_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # map dags
      - ./airflow/dags:/opt/airflow/dags
      # map etl folder
      - ./etl:/opt/airflow/etl
      # gives Airflow access to the Docker network through the socket
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgres+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=tuAKStwS_F8_Q-WK-C88r4QFI88SBTfS5WQ3ilN1leA=
      - AIRFLOW__WEBSERVER__DEFAULT__USER_USERNAME=airflow
      - AIRFLOW__WEBSERVER__DEFAULT__USER_PASSWORD=password
      - AIRFLOW_WWW_USER_USERNAME=airflow
      - AIRFLOW_WWW_USER_PASSWORD=password
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
    command: scheduler

networks:
  speedrun_stats_network:
    driver: bridge